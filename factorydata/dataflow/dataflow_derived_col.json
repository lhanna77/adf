{
	"name": "dataflow_derived_col",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "source_sales_data",
						"type": "DatasetReference"
					},
					"name": "sales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sink_look_json",
						"type": "DatasetReference"
					},
					"name": "sinkOutputJSON"
				}
			],
			"transformations": [
				{
					"name": "ifNull"
				},
				{
					"name": "concat"
				},
				{
					"name": "subCols"
				},
				{
					"name": "selectCols"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          SalePersonFName as string,",
				"          SalePersonLName as string,",
				"          ProductName as string,",
				"          ItemsSold as string,",
				"          SoldPrice as string,",
				"          SoldDate as string,",
				"          City as string,",
				"          State as string,",
				"          Country as string,",
				"          Region as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sales",
				"sales derive(SalePersonFName = iifNull(SalePersonFName, \"unknown\")) ~> ifNull",
				"ifNull derive(FullName = concatWS(\" \",SalePersonFName,SalePersonLName)) ~> concat",
				"concat derive(Hdata = @(city1=City,",
				"          region=Region)) ~> subCols",
				"subCols select(mapColumn(",
				"          id,",
				"          SalePersonFName,",
				"          SalePersonLName,",
				"          ProductName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCols",
				"selectCols sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkOutputJSON"
			]
		}
	}
}