{
	"name": "Data Integration YT",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata of Files",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "source_csv_multiple_sales",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter sales",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata of Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of Files').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, 'sales')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter products",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata of Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of Files').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, 'product')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Filter customer",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata of Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata of Files').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, 'customer')",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": []
	}
}